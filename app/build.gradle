apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

repositories {
  maven { url 'https://maven.fabric.io/public' }
}

android {
  compileSdkVersion project.compileSdkVersion
  buildToolsVersion project.buildToolsVersion

  defaultConfig {
    applicationId "pl.oziem.whattowatch"
    minSdkVersion project.minSdkVersion
    targetSdkVersion project.compileSdkVersion
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    vectorDrawables.useSupportLibrary = true
    multiDexEnabled true
  }

  lintOptions {
    abortOnError false
  }

  buildTypes {
    release {
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  packagingOptions {
    exclude 'META-INF/proguard/androidx-annotations.pro'
  }
}

dependencies {
  implementation project(':commons')
  implementation project(':datasource')

  // Kotlin
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

  // KTX
  implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0-rc02"
  implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0-rc02"
  implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0-rc02"

  // Dagger
  implementation "com.google.dagger:dagger:$daggerVersion"
  kapt "com.google.dagger:dagger-compiler:$daggerVersion"
  implementation "com.google.dagger:dagger-android:$daggerVersion"
  implementation "com.google.dagger:dagger-android-support:$daggerVersion"
  // if you use the support libraries
  kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

  // AAC
  implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
  kapt 'androidx.lifecycle:lifecycle-compiler:2.0.0'
  testImplementation 'androidx.arch.core:core-testing:2.0.0'
  // AAC Paging
  implementation 'androidx.paging:paging-runtime:2.0.0'

  // Google Play Services
  implementation "com.google.android.gms:play-services-base:$gmsVersion"

  // Support Libs
  implementation 'androidx.appcompat:appcompat:1.0.0'
  implementation 'androidx.legacy:legacy-support-v4:1.0.0'
  implementation 'androidx.recyclerview:recyclerview:1.0.0'
  implementation 'com.google.android.material:material:1.0.0'
  implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

  // Glide
  implementation "com.github.bumptech.glide:glide:$glideVersion"
  kapt "com.github.bumptech.glide:compiler:$glideVersion"
  implementation "com.github.bumptech.glide:okhttp3-integration:$glideVersion"

  // Anko
  implementation "org.jetbrains.anko:anko-commons:$ankoVersion"

  // RX Bindings
  implementation 'com.jakewharton.rxbinding3:rxbinding:3.0.0-alpha2'

  // Flow
  implementation 'com.mboudraa.flow:flow:0.1'

  // Crashlytics
  implementation('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
    transitive = true
  }

  testImplementation 'junit:junit:4.12'
  testImplementation "org.mockito:mockito-core:2.27.0"
  androidTestImplementation 'androidx.test.ext:junit:1.1.1'
  androidTestImplementation 'androidx.test:rules:1.1.1'

  // Espresso
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
  androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.0', {
    exclude group: 'com.android.support', module: 'support-annotations'
    exclude group: 'com.android.support', module: 'support-v4'
    exclude group: 'com.android.support', module: 'design'
    exclude group: 'com.android.support', module: 'recyclerview-v7'
  }
}

apply plugin: 'com.google.gms.google-services'
